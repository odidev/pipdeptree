name: check
on:
  push:
  pull_request:
  schedule:
  - cron: "0 8 * * *"

jobs:
  test:
    name: Test on ${{ matrix.py }} under ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - Ubuntu-latest
        py:
        - 3.9
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
        - pypy3
        - pypy2
    steps:
    - name: Setup graphviz
      uses: ts-graphviz/setup-graphviz@v1
    - name: Setup python for tox
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install tox
      run: python -m pip install tox
    - name: Setup python for test ${{ matrix.py }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py }}
    - uses: actions/checkout@v2
    - name: Pick tox environment to run
      run: |
        import os
        import platform
        import sys
        major, minor, impl = sys.version_info[0], sys.version_info[1], platform.python_implementation()
        toxenv = ("py" if impl == "CPython" else "pypy") + ("{}{}".format(major, minor) if impl == "CPython" else ("3" if major == 3 else ""))
        env_file = open(os.environ['GITHUB_ENV'], "a")
        env_file.write("TOXENV={}\n".format(toxenv))
        env_file.close()
      shell: python
    - name: Setup test suite
      run: tox -vv --notest
    - name: Run test suite
      run: tox --skip-pkg-install

  build_and_test_arm64:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python -m pip install --upgrade pip && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \
              export DEBIAN_FRONTEND=noninteractive && \
              apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              apt-get -y install graphviz && \
              python -m pip install tox && \
              tox -e py38 -vv --notest && \
              tox -e py38 --skip-pkg-install && \
              deactivate'
